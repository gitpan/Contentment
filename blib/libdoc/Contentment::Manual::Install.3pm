.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Contentment::Manual::Install 3"
.TH Contentment::Manual::Install 3 "2006-01-28" "perl v5.8.6" "User Contributed Perl Documentation"
.SH "NAME"
Contentment::Manual::Install \- The installation guide for Contentment
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 4
\&  perl Build.PL
\&  ./Build
\&  ./Build test
\&  ./Build install
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The procedure given in the \*(L"\s-1SYNOPSIS\s0\*(R" will give you the base install. If you're using \s-1CPAN\s0, you can also:
.PP
.Vb 1
\&  cpan Contentment
.Ve
.PP
or:
.PP
.Vb 1
\&  perl -MCPAN 'install Contentment'
.Ve
.PP
depending on the availability of the \fIcpan\fR script.
.PP
After the base is installed, you will need to configure your Contentment installation. As of this writing, this is a non-trivial process, but I'm curently working on a script to automate it.
.PP
\&\fB\s-1WARNING:\s0\fR \fII am serious. These instructions are not for the faint of heart! Older individuals, pregnant women, and anyone who might be at risk for heart related problems should stop here.\fR
.Sh "\s-1CONFIGURING\s0 \s-1APACHE\s0"
.IX Subsection "CONFIGURING APACHE"
These instructions assume you are using Apache web server (the version matters very little), but any \s-1CGI\s0 capable web server is sufficient, assuming you can adapt these instructions to those web servers.
.PP
The files you need to get started with are in the \fIhtdocs\fR folder. You need to copy these files somewhere Apache will find them. You can either copy these files into your web root or you can tweak the \fIhttpd.conf\fR of your web server.
.PP
Finally, you need something like the following in a file named \fI.htaccess\fR within the directory where you copied \fIhtdocs\fR, or the equivalent information inside of your \fIhttpd.conf\fR:
.PP
.Vb 1
\&  Options FollowSymLinks
.Ve
.PP
.Vb 3
\&  RewriteEngine on
\&  RewriteRule "^$"    "cgi-bin/contentment.cgi/index.html" [L]
\&  RewriteRule "(.*)$" "cgi-bin/contentment.cgi/$1"         [L]
.Ve
.PP
and in the \fI.htaccess\fR file for \fIhtdocs/cgi\-bin\fR:
.PP
.Vb 1
\&  RewriteEngine off
.Ve
.PP
.Vb 2
\&  Options ExecCGI
\&  AddHandler cgi-script .cgi
.Ve
.Sh "\s-1CONTENTMENT\s0 \s-1INIT\s0 \s-1CONFIGURATION\s0"
.IX Subsection "CONTENTMENT INIT CONFIGURATION"
Before running Contentment, you need to create a file named \fIinit.yml\fR in the same directory as \fIcontentment.cgi\fR. This file should contain at least three directives in \s-1YAML\s0 format: \*(L"dbi_database\*(R", \*(L"plugins_dir\*(R", and \*(L"vfs\*(R". Depending on your setup, you'll probably also want \*(L"dbi_username\*(R" and \*(L"dbi_password\*(R".
.PP
.Vb 3
\&  dbi_database: dbi:mysql:exampledb
\&  dbi_username: example
\&  dbi_password: secret
.Ve
.PP
.Vb 1
\&  plugins_dir: /var/www/localhost/plugins
.Ve
.PP
.Vb 4
\&  vfs:
\&   - Real
\&   - root
\&   - /var/www/localhost/htdocs
.Ve
.Sh "\s-1READY\s0 \s-1TO\s0 \s-1ROLL\s0"
.IX Subsection "READY TO ROLL"
Assuming these instructions are at all correct and useful. You should now be able to open your Contentment \fIindex.html\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Andrew Sterling Hanenkamp, <hanenkamp@cpan.org>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright 2005 Andrew Sterling Hanenkamp. All Rights Reserved.
.PP
Contentment is distributed under the same terms as Perl itself.
